// <auto-generated />
using System;
using Hospital;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20210302201233_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Hospital.model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("LAST_NAME");

                    b.Property<int>("Salary")
                        .HasColumnType("INT")
                        .HasColumnName("SALARY");

                    b.Property<int>("Svnr")
                        .HasColumnType("INT")
                        .HasColumnName("SVNR");

                    b.HasKey("Id");

                    b.HasIndex("Svnr")
                        .IsUnique();

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("Hospital.model.HospitalFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FACILITY_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("NAME");

                    b.Property<string>("PhoneNr")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("PHONE_NR");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PhoneNr")
                        .IsUnique();

                    b.ToTable("HOSPITAL_FACILITIES");
                });

            modelBuilder.Entity("Hospital.model.CareTaker", b =>
                {
                    b.HasBaseType("Hospital.model.Employee");

                    b.Property<int?>("SUPERVISOR")
                        .HasColumnType("int");

                    b.HasIndex("SUPERVISOR");

                    b.ToTable("CARE_TAKERS");
                });

            modelBuilder.Entity("Hospital.model.Physician", b =>
                {
                    b.HasBaseType("Hospital.model.Employee");

                    b.Property<string>("JobSpecialisation")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("JOB_SPECIALISATION");

                    b.ToTable("PHYSICIANS");
                });

            modelBuilder.Entity("Hospital.model.CareTaker", b =>
                {
                    b.HasOne("Hospital.model.Employee", null)
                        .WithOne()
                        .HasForeignKey("Hospital.model.CareTaker", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital.model.CareTaker", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SUPERVISOR");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Hospital.model.Physician", b =>
                {
                    b.HasOne("Hospital.model.Employee", null)
                        .WithOne()
                        .HasForeignKey("Hospital.model.Physician", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
